# ECSでLaravelを動かすために必要な情報をまとめる。
# 起動コマンド
# docker-compose -f docker-compose.test.yml up
# ローカルではLaravelまで通信が到達する事を確認できた。

# その他参考
# ・docker-compose の bind mount を1行で書くな
# https://zenn.dev/sarisia/articles/0c1db052d09921

version: "3.9"
# EC2インスタンスで起動を試したい場合は、踏み台サーバーにしてるEC2の都合上3.3を指定する。
# version: "3.3"

volumes:
  db-store:
  # 以下のやつは、laravel tinker(psysh)を使えるようになるみたいなのだが、不要なのでコメントアウト
  # psysh-store:

# サービスの定義
services:
  # Laravelコンテナ
  app:
    image: dancers/laravel
    volumes:
      # - ./src:/data
      - type: bind
        source: ./src
        target: /data
      # - type: volume
      #   source: psysh-store
      #   target: /root/.config/psysh
      #   volume:
      #     nocopy: true

  # Nginxコンテナ
  web:
    image: dancers/nginx
    ports:
      - 80:80
    # ↑の書き方でも動作するのでよりシンプルな記述に変更。
    # ports:
    #   - target: 80
    #     published: 80
    #     protocol: tcp
    #     mode: host
    volumes:
      # 短縮構文だと、マウント元になる対象（ディレクトリ）が存在しない場合に自動で対象を作成する。
      # - ./src:/data
      # 以下の構文だとマウント元の対象がない場合はエラーを吐いて終わり。
      - type: bind
        source: ./src
        target: /data

  db:
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-laravel_local}
      - MYSQL_USER=${DB_USERNAME:-phper}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
